load_module /etc/nginx/modules/ngx_http_headers_more_filter_module.so;

user  root;
worker_processes  1;

events {
}

error_log  /var/log/nginx/error.log notice;

http {
    include mime.types;

    proxy_cache_path /var/cache/nginx keys_zone=bscache:15m max_size=1G;

    upstream app {
        server bs-app-main:8000 weight=2;  # Основной бэкенд (172.25.0.9 - для логов)
        server bs-app-inst1:8000 weight=1; #  (172.25.0.6 - для логов)
        server bs-app-inst2:8000 weight=1; #  (172.25.0.7 - для логов)
    }

    log_format  main  '[$connection] [$connection_requests] [$pid] [$upstream_addr] $remote_addr - $remote_user [$time_local] "$request" '
                              '$status $body_bytes_sent "$http_referer" '
                              '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    server {
        listen       80;
        server_name  localhost;

        # подмена имени сервера в ответах на заголовки
        server_tokens off;
        more_set_headers 'Server: BookSmart';

        # gzip сжатие
        gzip_types *;
        gzip on;

        # кеширование
        proxy_cache bscache;
        proxy_cache_methods GET;
        proxy_cache_valid 200 1m;
        proxy_cache_key $scheme$request_method$host$request_uri;

        if ($request_uri ~ "^/api*") {
            set $no_cache 1;
        }

        proxy_cache_bypass $no_cache; # не отправляет кешированный ответ
        proxy_no_cache $no_cache; # не кеширует ответ

        location / {
            root /usr/share/nginx/static/; # корневой каталог для запросов
            index index.html;
            try_files $uri $uri/ /index.html =404; # проверка существования файлов в заданном порядке
        }

        location /test {
            proxy_pass http://localhost/;
        }

        location = /api/v1 {
            return 301 http://localhost:8000/swagger/index.html#/; # перенаправление
        }

        location /api/v1 {
            if ($request_method = GET) {
                proxy_pass http://app;
                break;
            }

            proxy_pass  http://bs-app-main:8000/api/v1;
        }

        location /documentation {
            root /usr/share/nginx/;
            index readme.html;
            try_files $uri $uri/ /readme.html =404;
        }

        location /admin {
            proxy_set_header X-Script-Name /admin; # X-Script-Name -- для корректной работы по подпути
            proxy_pass http://bs-pgadmin;
        }

        location /legacy {
            root /usr/share/nginx/;
            index legacy.html;
            try_files $uri $uri/ /legacy.html =404;
        }

        location /status {
            stub_status;
        }

        # mirror1
        location /mirror1/api/v1 {
            proxy_pass  http://bs-app-mirror1:8000/api/v1;
        }
    }
}

