x-bs-app-common: &bs-app-common
  volumes:
    - ./.logs/app/:/usr/local/src/logs
    - ./.env:/usr/local/src/.env
    - ./configs/config.yml:/usr/local/src/configs/config.yml

x-bs-postgres-common: &bs-postgres-common
  healthcheck:
    test: [ "CMD-SHELL", "pg_isready -U postgres" ]
    interval: 5s
    timeout: 5s
    retries: 5

services:
  bs-app-gin:
    <<: *bs-app-common
    build:
      context: .
      dockerfile: Dockerfile
    image: booksmart:local
    container_name: bs-app-gin
    environment:
      POSTGRES_DB_NAME: ${POSTGRES_DB_NAME}
      POSTGRES_DB_USER: ${POSTGRES_DB_ADMIN}
      POSTGRES_DB_PASSWORD: ${POSTGRES_DB_ADMIN_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST_MASTER}
    depends_on:
      bs-postgres-master:
        condition: service_healthy
      bs-redis:
        condition: service_started
    ports:
      - "${APP_PORT}:8000"
    networks:
      - bs-net

  bs-app-echo:
    <<: *bs-app-common
    build:
      context: .
      dockerfile: Dockerfile-bench
    image: booksmart:local
    container_name: bs-app-echo
    environment:
      POSTGRES_DB_NAME: ${POSTGRES_DB_NAME}
      POSTGRES_DB_USER: ${POSTGRES_DB_ADMIN}
      POSTGRES_DB_PASSWORD: ${POSTGRES_DB_ADMIN_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST_MASTER}
    depends_on:
      bs-postgres-master:
        condition: service_healthy
      bs-redis:
        condition: service_started
    ports:
      - "${APP_PORT_2}:8000"
    networks:
      - bs-net

  bs-postgres-master:
    <<: *bs-postgres-common
    image: bitnami/postgresql:latest
    container_name: bs-postgres-master
    environment:
      POSTGRESQL_REPLICATION_MODE: master
      POSTGRESQL_REPLICATION_USER: ${POSTGRES_REPL_USER}
      POSTGRESQL_REPLICATION_PASSWORD: ${POSTGRES_REPL_PASSWORD}
      POSTGRESQL_USERNAME: ${POSTGRES_USER}
      POSTGRESQL_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRESQL_DATABASE: ${POSTGRES_DB_NAME}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - ${POSTGRES_ALL_MIGRATIONS_PATH}:/docker-entrypoint-initdb.d/
      - ${DB_DATASETS_PATH}:/data
    networks:
      - bs-net

  bs-redis:
    image: redis:latest
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_USER: ${REDIS_USER}
      REDIS_USER_PASSWORD: ${REDIS_USER_PASSWORD}
    command: >
      sh -c '
        mkdir -p /usr/local/etc/redis &&
        echo "requirepass $REDIS_PASSWORD" >> /usr/local/etc/redis/redis.conf &&
        echo "appendonly yes" >> /usr/local/etc/redis/redis.conf &&
        echo "appendfsync everysec" >> /usr/local/etc/redis/redis.conf &&
        echo "user default on nopass ~* +@all" > /usr/local/etc/redis/users.acl &&
        echo "user $REDIS_USER on >$REDIS_USER_PASSWORD ~* +@all" >> /usr/local/etc/redis/users.acl &&
        redis-server /usr/local/etc/redis/redis.conf --aclfile /usr/local/etc/redis/users.acl
      '
    container_name: bs-redis
    volumes:
      - ./.data/redis:/var/lib/redis
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - bs-net

networks:
  bs-net:
    name: bs-net
    driver: bridge